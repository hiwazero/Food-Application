{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\Food Order App\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport styles from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const [formIsValid, setFormIsValid] = useState({\n    name: true,\n    street: true,\n    postalcode: true,\n    city: true\n  });\n  const nameRef = useRef();\n  const streetRef = useRef();\n  const postalcodeRef = useRef();\n  const cityRef = useRef();\n  const onConfirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameRef.current.value;\n    const enteredStreet = streetRef.current.value;\n    const enteredPostalCode = postalcodeRef.current.value;\n    const enteredCity = cityRef.current.value;\n    const nameIsValid = /^(?!\\s)(?!.*\\s$).+$/.test(enteredName);\n    const streetIsValid = /^(?!\\s)(?!.*\\s$).+$/.test(enteredStreet);\n    const postalcodeIsValid = /^\\d{5}$/.test(enteredPostalCode);\n    const cityIsValid = /^(?!\\s)(?!.*\\s$).+$/.test(enteredCity);\n    setFormIsValid({\n      name: nameIsValid,\n      street: streetIsValid,\n      postalcode: postalcodeIsValid,\n      city: cityIsValid\n    });\n    const formValidation = nameIsValid && streetIsValid && postalcodeIsValid && cityIsValid;\n    if (!formValidation) {\n      return;\n    }\n    props.onSubmitOrder({\n      name: enteredName,\n      street: enteredStreet,\n      postalcode: enteredPostalCode,\n      city: enteredCity\n    });\n  };\n\n  // const nameClassName = formIsValid.name ? `.control` : `.control.invalid`\n  const nameClassName = `${styles.control} ${formIsValid.name ? '' : styles.invalid}`;\n  const streetClassName = `${styles.control} ${formIsValid.street ? '' : styles.invalid}`;\n  const postalcodeClassName = `${styles.control} ${formIsValid.postalcode ? '' : styles.invalid}`;\n  const cityClassName = `${styles.control} ${formIsValid.city ? '' : styles.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: onConfirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClassName,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), !formIsValid.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetClassName,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), !formIsValid.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalcodeClassName,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalcodeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), !formIsValid.postalcode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid postal code (5 digits long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityClassName,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), !formIsValid.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"bJ69Qp5pF8k9XbwE/aKGNAY4kcg=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useRef","useState","styles","Checkout","props","formIsValid","setFormIsValid","name","street","postalcode","city","nameRef","streetRef","postalcodeRef","cityRef","onConfirmHandler","event","preventDefault","enteredName","current","value","enteredStreet","enteredPostalCode","enteredCity","nameIsValid","test","streetIsValid","postalcodeIsValid","cityIsValid","formValidation","onSubmitOrder","nameClassName","control","invalid","streetClassName","postalcodeClassName","cityClassName","form","actions","onCancel","submit"],"sources":["C:/Users/MY PC/Desktop/Food Order App/src/components/Cart/Checkout.js"],"sourcesContent":["import React , {useRef , useState} from 'react'\r\nimport styles from './Checkout.module.css'\r\n\r\n\r\nconst Checkout = (props) =>{\r\n    const [formIsValid, setFormIsValid] = useState({\r\n        name: true,\r\n        street: true,\r\n        postalcode: true,\r\n        city: true\r\n    })\r\n\r\n    const nameRef = useRef()\r\n    const streetRef = useRef()\r\n    const postalcodeRef = useRef()\r\n    const cityRef = useRef()\r\n\r\n\r\n    const onConfirmHandler = (event) => {\r\n        event.preventDefault()\r\n        const enteredName = nameRef.current.value\r\n        const enteredStreet = streetRef.current.value\r\n        const enteredPostalCode = postalcodeRef.current.value\r\n        const enteredCity = cityRef.current.value\r\n\r\n        const nameIsValid = /^(?!\\s)(?!.*\\s$).+$/.test(enteredName)\r\n        const streetIsValid = /^(?!\\s)(?!.*\\s$).+$/.test(enteredStreet)\r\n        const postalcodeIsValid = /^\\d{5}$/.test(enteredPostalCode)\r\n        const cityIsValid = /^(?!\\s)(?!.*\\s$).+$/.test(enteredCity)\r\n\r\n        setFormIsValid({\r\n            name: nameIsValid,\r\n            street: streetIsValid,\r\n            postalcode: postalcodeIsValid,\r\n            city: cityIsValid \r\n        })\r\n\r\n        const formValidation = nameIsValid && streetIsValid && postalcodeIsValid && cityIsValid\r\n\r\n        if(!formValidation){\r\n            return\r\n        }\r\n\r\n        props.onSubmitOrder({\r\n            name: enteredName,\r\n            street: enteredStreet,\r\n            postalcode: enteredPostalCode,\r\n            city: enteredCity\r\n        })\r\n    } \r\n\r\n    // const nameClassName = formIsValid.name ? `.control` : `.control.invalid`\r\n    const nameClassName = `${styles.control} ${formIsValid.name ? '' : styles.invalid}`\r\n    const streetClassName = `${styles.control} ${formIsValid.street ? '' : styles.invalid}`\r\n    const postalcodeClassName = `${styles.control} ${formIsValid.postalcode ? '' : styles.invalid}`\r\n    const cityClassName = `${styles.control} ${formIsValid.city ? '' : styles.invalid}`\r\n\r\n    return(\r\n        <form className={styles.form} onSubmit={onConfirmHandler}>\r\n        <div className={nameClassName}>\r\n          <label htmlFor='name'>Your Name</label>\r\n          <input type='text' id='name' ref={nameRef}/>\r\n          {!formIsValid.name && <p>Please enter valid name</p>}\r\n        </div>\r\n        <div className={streetClassName}>\r\n          <label htmlFor='street'>Street</label>\r\n          <input type='text' id='street'  ref={streetRef}/>\r\n          {!formIsValid.street && <p>Please enter valid street</p>}\r\n        </div>\r\n        <div className={postalcodeClassName}>\r\n          <label htmlFor='postal'>Postal Code</label>\r\n          <input type='text' id='postal' ref={postalcodeRef}/>\r\n          {!formIsValid.postalcode && <p>Please enter valid postal code (5 digits long)</p>}\r\n        </div>\r\n        <div className={cityClassName}>\r\n          <label htmlFor='city'>City</label>\r\n          <input type='text' id='city' ref={cityRef}/>\r\n          {!formIsValid.city && <p>Please enter valid city</p>}\r\n        </div>\r\n        <div className={styles.actions}>\r\n          <button type='button' onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button className={styles.submit}>Confirm</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Checkout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}